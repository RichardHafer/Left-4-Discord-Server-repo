
"vscript_replacer"
{
	".+"
	{
		"jukebox_dlc1"
		{
			// Find and replace the string literally, you must always escape any quotes or backslashes: " with \" and \ with \\
			// Strings must be less than 8192 characters. Use the file "override" keyvalue for anything longer.
			"DBG <- ::JUKEBOX_DEBUG <- true"		"DBG <- ::JUKEBOX_DEBUG <- false"
		}

		"jukebox_main"
		{
			"DBG <- ::JUKEBOX_DEBUG <- true"		"DBG <- ::JUKEBOX_DEBUG <- false"
		}

		// CS:GO test: script_execute birds/birdspawner;
		// "birds/birdspawner"
		// {
			// "m_bIsBirdSpawner <- true;"				"m_bIsBirdSpawner <- true; printl(\"BIRD WATCHING\");";
		// }
	}

	/*
	"c[0-9]m[0-9]_.+"
	{
		"some_vscript_file"
		{
			"override"								"my_vscript_file"

			// Can still use other keys to find and replace strings within the override file.
			"some_random_var = false;"				"some_random_var = true;"
		}
	}
	// */

	"helms_deep"
	{
		"helms_deep_.+_survival"
		{
			"regex"			"3"

			"metamod_version"						"metamod_working" // Makes the Helms Deep VScript search for the wrong cvar.
			"sourcemod_version"						"sourcemod_working" // Preventing the VScript from executing KillServer command.

			"(STEAM_[0-5]:[0-1]:[0-9]+)"			"STEAM_1:0:11101" // Your donators can fuck off too.

			"Utils.GetIDFromArray(HelmsSteamIDs, player.GetSteamID()) != -1"			"1 == 1"

			"Notifications::OnServerCvarChanged::HelmsCvarChanged"			"Notifications::Wtf::Gtfo"

			"HelmsDisableAdminSystem();"			""

			"Convars.SetValue"			"// Convars.SetValue"
		}
	}
  	"c1m4_atrium"
	{
		"c1m4_atrium_finale"
		{
			"override"								"c1m4_atrium_finale_c"

		}
	}
  	"c2m5_concert"
	{
		"c2m5_concert_finale"
		{
			"override"								"c2m5_concert_finale_c"

		}
	}
  	"c3m4_plantation"
	{
		"c3m4_plantation_finale"
		{
			"override"								"c3m4_plantation_finale_c"

		}
	}
  	"c4m5_milltown_escape"
	{
		"c4m5_milltown_escape_finale"
		{
			"override"								"c4m5_milltown_escape_finale_c"

		}
	}
  	"c5m5_bridge"
	{
		"director_gauntlet"
		{
			"override"								"director_gauntlet_c"

		}
	}
  	"c6m3_port"
	{
		"c6m3_port_finale"
		{
			"override"								"c6m3_port_finale_c"

		}
	}
  	"c7m3_port"
	{
		"c7m3_port_finale"
		{
			"override"								"c7m3_port_finale_c"

		}
	}
  	"c8m5_rooftop"
	{
		"c8m5_rooftop_finale"
		{
			"override"								"c8m5_rooftop_finale_c"

		}
	}
  	"c9m2_lots"
	{
		"c9m2_lots_finale"
		{
			"override"								"c9m2_lots_finale_c"

		}
	}
  	"c10m5_houseboat"
	{
		"c10m5_houseboat_finale"
		{
			"override"								"c10m5_houseboat_finale_c"

		}
	}
  	"c11m5_runway"
	{
		"c11m5_runway_finale"
		{
			"override"								"c11m5_runway_finale_c"

		}
	}
  	"c12m5_cornfield"
	{
		"c12m5_cornfield_finale"
		{
			"override"								"c12m5_cornfield_finale_c"

		}
	}
  	"c14m2_lighthouse"
	{
		"c14m2_lighthouse_finale"
		{
			"override"								"c14m2_lighthouse_finale_c"

		}
	}
}